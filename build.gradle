plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
}

group 'ru.viptec.zknzapretinfo'
version '0.2.6'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3"
    implementation files("lib/soap-client.jar")
    implementation group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceSets {
    main.java.srcDirs += "src/main/kotlin"
    test.java.srcDirs += "src/test/kotlin"
}

def buildDirPath = "$buildDir/dist/$version"
def configDirPath = "$buildDirPath/configs"
def operatorsDirPath = "$buildDirPath/operators"

task createFolders {
    def buildDirFile = file(buildDirPath)
    if (!buildDirFile.exists())
        buildDirFile.mkdirs()

    def configDirFile = file(configDirPath)
    if (!configDirFile.exists())
        configDirFile.mkdir()

    def operatorsDirFile = file(operatorsDirPath)
    if (!operatorsDirFile.exists())
        operatorsDirFile.mkdir()

    def logsDirFile = file("$buildDirPath/logs")
    if (!logsDirFile.exists())
        logsDirFile.mkdir()
}

task copyExamples(type: Copy) {
    from "configs_example"
    into buildDirPath
}

task makeEnvironment {
    dependsOn createFolders
    dependsOn copyExamples
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    dependsOn makeEnvironment
    manifest {
        attributes 'Implementation-Title': 'Rkn-Zapret-Info Downloader',
                'Implementation-Version': archiveVersion,
                'Main-Class': 'ru.viptec.zapretinfo.main.MainKt'
    }

    archiveClassifier = "all"
    destinationDirectory = file(buildDirPath)
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    with jar
}

task mkZip(type: Zip) {
    dependsOn fatJar

    from("$buildDirPath") {
        into "RknZapretInfo"
        exclude "*.zip"
    }
    destinationDirectory = file(buildDirPath)
}



